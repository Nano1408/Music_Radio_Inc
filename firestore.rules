rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isPersonaColeccionUsers(uid) {
      return exists(/databases/$(database)/Music_Users/$(uid));
    }
    
    match /Music_Users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Permitir a los usuarios crear sus propios documentos en la colección "Music_Users"
    match /Music_Users/{uid} {
      allow create: if request.auth != null
                   && request.resource.data.keys().hasAll(['nombre', 'apellido', 'correo', 'numIdentificacion', 'direccion', 'ciudad', 'telefono'])
                   && uid == request.auth.uid;
                   
      // Solo permitir actualizar los propios documentos si el usuario está registrado en la colección
      allow update: if request.auth != null
                   && isPersonaColeccionUsers(request.auth.uid)
                   && uid == request.auth.uid
                   && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['nombre', 'apellido', 'correo', 'numIdentificacion', 'direccion', 'ciudad', 'telefono']);
                   
      // No permitir borrar documentos existentes
      allow delete: if false;
                   
      // Solo permitir la lectura si el usuario está autenticado y registrado en la colección
      allow read: if request.auth != null && isPersonaColeccionUsers(request.auth.uid) && uid == request.auth.uid;
    }
    
    // Denegar lectura y escritura en cualquier otra parte de la base de datos
    match /{document=**} {
      allow read, write: if false;
    }

    //  match /Music_Users/{document=**} {
    //    allow read, write: if
    //        request.time < timestamp.date(2023, 12, 30);
    //  }
  } 
}